//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace OrderDetails.VesigoOrdersService {
    using System.Diagnostics;
    using System;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System.Web.Services;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="orders_internalSoap", Namespace="http://www.ontimesystem.com/sites/")]
    public partial class orders_internal : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback SetSignatureRequirementOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetCODRequirementOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetUserDefinedFieldOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOrderAsXMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetLocationAsXMLOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOrdersByStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetOrderColumnByNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOrderColumnByNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTotalPriceOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateOrderOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsertOrderStatusChangeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOrderFileAttachmentListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOrderFileAttachmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddOrderFileAttachmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteOrderFileAttachmentOperationCompleted;
        
        private System.Threading.SendOrPostCallback UserListOperationCompleted;
        
        private System.Threading.SendOrPostCallback UserDetailOperationCompleted;
        
        private System.Threading.SendOrPostCallback OrderUserLocationOperationCompleted;
        
        private System.Threading.SendOrPostCallback UserLocationOperationCompleted;
        
        private System.Threading.SendOrPostCallback OrdersAssignedToUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback OrderAddModifierOperationCompleted;
        
        private System.Threading.SendOrPostCallback OrderRemoveModifierOperationCompleted;
        
        private System.Threading.SendOrPostCallback OrderAddMiscUserCompensationOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateCustomerOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public orders_internal() {
            this.Url = global::OrderDetails.Properties.Settings.Default.OrderDetails_VesigoOrdersService_orders_internal;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event SetSignatureRequirementCompletedEventHandler SetSignatureRequirementCompleted;
        
        /// <remarks/>
        public event SetCODRequirementCompletedEventHandler SetCODRequirementCompleted;
        
        /// <remarks/>
        public event SetUserDefinedFieldCompletedEventHandler SetUserDefinedFieldCompleted;
        
        /// <remarks/>
        public event GetOrderAsXMLCompletedEventHandler GetOrderAsXMLCompleted;
        
        /// <remarks/>
        public event GetLocationAsXMLCompletedEventHandler GetLocationAsXMLCompleted;
        
        /// <remarks/>
        public event GetOrdersByStatusCompletedEventHandler GetOrdersByStatusCompleted;
        
        /// <remarks/>
        public event SetOrderColumnByNameCompletedEventHandler SetOrderColumnByNameCompleted;
        
        /// <remarks/>
        public event GetOrderColumnByNameCompletedEventHandler GetOrderColumnByNameCompleted;
        
        /// <remarks/>
        public event GetTotalPriceCompletedEventHandler GetTotalPriceCompleted;
        
        /// <remarks/>
        public event CreateOrderCompletedEventHandler CreateOrderCompleted;
        
        /// <remarks/>
        public event InsertOrderStatusChangeCompletedEventHandler InsertOrderStatusChangeCompleted;
        
        /// <remarks/>
        public event GetOrderFileAttachmentListCompletedEventHandler GetOrderFileAttachmentListCompleted;
        
        /// <remarks/>
        public event GetOrderFileAttachmentCompletedEventHandler GetOrderFileAttachmentCompleted;
        
        /// <remarks/>
        public event AddOrderFileAttachmentCompletedEventHandler AddOrderFileAttachmentCompleted;
        
        /// <remarks/>
        public event DeleteOrderFileAttachmentCompletedEventHandler DeleteOrderFileAttachmentCompleted;
        
        /// <remarks/>
        public event UserListCompletedEventHandler UserListCompleted;
        
        /// <remarks/>
        public event UserDetailCompletedEventHandler UserDetailCompleted;
        
        /// <remarks/>
        public event OrderUserLocationCompletedEventHandler OrderUserLocationCompleted;
        
        /// <remarks/>
        public event UserLocationCompletedEventHandler UserLocationCompleted;
        
        /// <remarks/>
        public event OrdersAssignedToUserCompletedEventHandler OrdersAssignedToUserCompleted;
        
        /// <remarks/>
        public event OrderAddModifierCompletedEventHandler OrderAddModifierCompleted;
        
        /// <remarks/>
        public event OrderRemoveModifierCompletedEventHandler OrderRemoveModifierCompleted;
        
        /// <remarks/>
        public event OrderAddMiscUserCompensationCompletedEventHandler OrderAddMiscUserCompensationCompleted;
        
        /// <remarks/>
        public event CreateCustomerCompletedEventHandler CreateCustomerCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.ontimesystem.com/sites/SetSignatureRequirement", RequestNamespace="http://www.ontimesystem.com/sites/", ResponseNamespace="http://www.ontimesystem.com/sites/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetSignatureRequirement(string SecurityKey, string TrackingNumber, bool RequireCollectionSignature, bool RequireDeliverySignature) {
            this.Invoke("SetSignatureRequirement", new object[] {
                        SecurityKey,
                        TrackingNumber,
                        RequireCollectionSignature,
                        RequireDeliverySignature});
        }
        
        /// <remarks/>
        public void SetSignatureRequirementAsync(string SecurityKey, string TrackingNumber, bool RequireCollectionSignature, bool RequireDeliverySignature) {
            this.SetSignatureRequirementAsync(SecurityKey, TrackingNumber, RequireCollectionSignature, RequireDeliverySignature, null);
        }
        
        /// <remarks/>
        public void SetSignatureRequirementAsync(string SecurityKey, string TrackingNumber, bool RequireCollectionSignature, bool RequireDeliverySignature, object userState) {
            if ((this.SetSignatureRequirementOperationCompleted == null)) {
                this.SetSignatureRequirementOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetSignatureRequirementOperationCompleted);
            }
            this.InvokeAsync("SetSignatureRequirement", new object[] {
                        SecurityKey,
                        TrackingNumber,
                        RequireCollectionSignature,
                        RequireDeliverySignature}, this.SetSignatureRequirementOperationCompleted, userState);
        }
        
        private void OnSetSignatureRequirementOperationCompleted(object arg) {
            if ((this.SetSignatureRequirementCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetSignatureRequirementCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.ontimesystem.com/sites/SetCODRequirement", RequestNamespace="http://www.ontimesystem.com/sites/", ResponseNamespace="http://www.ontimesystem.com/sites/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetCODRequirement(string SecurityKey, string TrackingNumber, double AmountToCollect, bool RequireCollectionCOD, bool RequireDeliveryCOD) {
            this.Invoke("SetCODRequirement", new object[] {
                        SecurityKey,
                        TrackingNumber,
                        AmountToCollect,
                        RequireCollectionCOD,
                        RequireDeliveryCOD});
        }
        
        /// <remarks/>
        public void SetCODRequirementAsync(string SecurityKey, string TrackingNumber, double AmountToCollect, bool RequireCollectionCOD, bool RequireDeliveryCOD) {
            this.SetCODRequirementAsync(SecurityKey, TrackingNumber, AmountToCollect, RequireCollectionCOD, RequireDeliveryCOD, null);
        }
        
        /// <remarks/>
        public void SetCODRequirementAsync(string SecurityKey, string TrackingNumber, double AmountToCollect, bool RequireCollectionCOD, bool RequireDeliveryCOD, object userState) {
            if ((this.SetCODRequirementOperationCompleted == null)) {
                this.SetCODRequirementOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetCODRequirementOperationCompleted);
            }
            this.InvokeAsync("SetCODRequirement", new object[] {
                        SecurityKey,
                        TrackingNumber,
                        AmountToCollect,
                        RequireCollectionCOD,
                        RequireDeliveryCOD}, this.SetCODRequirementOperationCompleted, userState);
        }
        
        private void OnSetCODRequirementOperationCompleted(object arg) {
            if ((this.SetCODRequirementCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetCODRequirementCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.ontimesystem.com/sites/SetUserDefinedField", RequestNamespace="http://www.ontimesystem.com/sites/", ResponseNamespace="http://www.ontimesystem.com/sites/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetUserDefinedField(string SecurityKey, string TrackingNumber, string FieldName, object Value) {
            this.Invoke("SetUserDefinedField", new object[] {
                        SecurityKey,
                        TrackingNumber,
                        FieldName,
                        Value});
        }
        
        /// <remarks/>
        public void SetUserDefinedFieldAsync(string SecurityKey, string TrackingNumber, string FieldName, object Value) {
            this.SetUserDefinedFieldAsync(SecurityKey, TrackingNumber, FieldName, Value, null);
        }
        
        /// <remarks/>
        public void SetUserDefinedFieldAsync(string SecurityKey, string TrackingNumber, string FieldName, object Value, object userState) {
            if ((this.SetUserDefinedFieldOperationCompleted == null)) {
                this.SetUserDefinedFieldOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetUserDefinedFieldOperationCompleted);
            }
            this.InvokeAsync("SetUserDefinedField", new object[] {
                        SecurityKey,
                        TrackingNumber,
                        FieldName,
                        Value}, this.SetUserDefinedFieldOperationCompleted, userState);
        }
        
        private void OnSetUserDefinedFieldOperationCompleted(object arg) {
            if ((this.SetUserDefinedFieldCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetUserDefinedFieldCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.ontimesystem.com/sites/GetOrderAsXML", RequestNamespace="http://www.ontimesystem.com/sites/", ResponseNamespace="http://www.ontimesystem.com/sites/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetOrderAsXML(string SecurityKey, string TrackingNumber) {
            object[] results = this.Invoke("GetOrderAsXML", new object[] {
                        SecurityKey,
                        TrackingNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetOrderAsXMLAsync(string SecurityKey, string TrackingNumber) {
            this.GetOrderAsXMLAsync(SecurityKey, TrackingNumber, null);
        }
        
        /// <remarks/>
        public void GetOrderAsXMLAsync(string SecurityKey, string TrackingNumber, object userState) {
            if ((this.GetOrderAsXMLOperationCompleted == null)) {
                this.GetOrderAsXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOrderAsXMLOperationCompleted);
            }
            this.InvokeAsync("GetOrderAsXML", new object[] {
                        SecurityKey,
                        TrackingNumber}, this.GetOrderAsXMLOperationCompleted, userState);
        }
        
        private void OnGetOrderAsXMLOperationCompleted(object arg) {
            if ((this.GetOrderAsXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOrderAsXMLCompleted(this, new GetOrderAsXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.ontimesystem.com/sites/GetLocationAsXML", RequestNamespace="http://www.ontimesystem.com/sites/", ResponseNamespace="http://www.ontimesystem.com/sites/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetLocationAsXML(string SecurityKey, string LocationID) {
            object[] results = this.Invoke("GetLocationAsXML", new object[] {
                        SecurityKey,
                        LocationID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetLocationAsXMLAsync(string SecurityKey, string LocationID) {
            this.GetLocationAsXMLAsync(SecurityKey, LocationID, null);
        }
        
        /// <remarks/>
        public void GetLocationAsXMLAsync(string SecurityKey, string LocationID, object userState) {
            if ((this.GetLocationAsXMLOperationCompleted == null)) {
                this.GetLocationAsXMLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetLocationAsXMLOperationCompleted);
            }
            this.InvokeAsync("GetLocationAsXML", new object[] {
                        SecurityKey,
                        LocationID}, this.GetLocationAsXMLOperationCompleted, userState);
        }
        
        private void OnGetLocationAsXMLOperationCompleted(object arg) {
            if ((this.GetLocationAsXMLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetLocationAsXMLCompleted(this, new GetLocationAsXMLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.ontimesystem.com/sites/GetOrdersByStatus", RequestNamespace="http://www.ontimesystem.com/sites/", ResponseNamespace="http://www.ontimesystem.com/sites/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetOrdersByStatus(string SecurityKey, int Status, System.DateTime StartDate, System.DateTime EndDate) {
            object[] results = this.Invoke("GetOrdersByStatus", new object[] {
                        SecurityKey,
                        Status,
                        StartDate,
                        EndDate});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetOrdersByStatusAsync(string SecurityKey, int Status, System.DateTime StartDate, System.DateTime EndDate) {
            this.GetOrdersByStatusAsync(SecurityKey, Status, StartDate, EndDate, null);
        }
        
        /// <remarks/>
        public void GetOrdersByStatusAsync(string SecurityKey, int Status, System.DateTime StartDate, System.DateTime EndDate, object userState) {
            if ((this.GetOrdersByStatusOperationCompleted == null)) {
                this.GetOrdersByStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOrdersByStatusOperationCompleted);
            }
            this.InvokeAsync("GetOrdersByStatus", new object[] {
                        SecurityKey,
                        Status,
                        StartDate,
                        EndDate}, this.GetOrdersByStatusOperationCompleted, userState);
        }
        
        private void OnGetOrdersByStatusOperationCompleted(object arg) {
            if ((this.GetOrdersByStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOrdersByStatusCompleted(this, new GetOrdersByStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.ontimesystem.com/sites/SetOrderColumnByName", RequestNamespace="http://www.ontimesystem.com/sites/", ResponseNamespace="http://www.ontimesystem.com/sites/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetOrderColumnByName(string SecurityKey, string TrackingNumber, string ColumnName, string Value) {
            this.Invoke("SetOrderColumnByName", new object[] {
                        SecurityKey,
                        TrackingNumber,
                        ColumnName,
                        Value});
        }
        
        /// <remarks/>
        public void SetOrderColumnByNameAsync(string SecurityKey, string TrackingNumber, string ColumnName, string Value) {
            this.SetOrderColumnByNameAsync(SecurityKey, TrackingNumber, ColumnName, Value, null);
        }
        
        /// <remarks/>
        public void SetOrderColumnByNameAsync(string SecurityKey, string TrackingNumber, string ColumnName, string Value, object userState) {
            if ((this.SetOrderColumnByNameOperationCompleted == null)) {
                this.SetOrderColumnByNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetOrderColumnByNameOperationCompleted);
            }
            this.InvokeAsync("SetOrderColumnByName", new object[] {
                        SecurityKey,
                        TrackingNumber,
                        ColumnName,
                        Value}, this.SetOrderColumnByNameOperationCompleted, userState);
        }
        
        private void OnSetOrderColumnByNameOperationCompleted(object arg) {
            if ((this.SetOrderColumnByNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetOrderColumnByNameCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.ontimesystem.com/sites/GetOrderColumnByName", RequestNamespace="http://www.ontimesystem.com/sites/", ResponseNamespace="http://www.ontimesystem.com/sites/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetOrderColumnByName(string SecurityKey, string TrackingNumber, string ColumnName) {
            object[] results = this.Invoke("GetOrderColumnByName", new object[] {
                        SecurityKey,
                        TrackingNumber,
                        ColumnName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetOrderColumnByNameAsync(string SecurityKey, string TrackingNumber, string ColumnName) {
            this.GetOrderColumnByNameAsync(SecurityKey, TrackingNumber, ColumnName, null);
        }
        
        /// <remarks/>
        public void GetOrderColumnByNameAsync(string SecurityKey, string TrackingNumber, string ColumnName, object userState) {
            if ((this.GetOrderColumnByNameOperationCompleted == null)) {
                this.GetOrderColumnByNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOrderColumnByNameOperationCompleted);
            }
            this.InvokeAsync("GetOrderColumnByName", new object[] {
                        SecurityKey,
                        TrackingNumber,
                        ColumnName}, this.GetOrderColumnByNameOperationCompleted, userState);
        }
        
        private void OnGetOrderColumnByNameOperationCompleted(object arg) {
            if ((this.GetOrderColumnByNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOrderColumnByNameCompleted(this, new GetOrderColumnByNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.ontimesystem.com/sites/GetTotalPrice", RequestNamespace="http://www.ontimesystem.com/sites/", ResponseNamespace="http://www.ontimesystem.com/sites/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public decimal GetTotalPrice(string SecurityKey, Order request) {
            object[] results = this.Invoke("GetTotalPrice", new object[] {
                        SecurityKey,
                        request});
            return ((decimal)(results[0]));
        }
        
        /// <remarks/>
        public void GetTotalPriceAsync(string SecurityKey, Order request) {
            this.GetTotalPriceAsync(SecurityKey, request, null);
        }
        
        /// <remarks/>
        public void GetTotalPriceAsync(string SecurityKey, Order request, object userState) {
            if ((this.GetTotalPriceOperationCompleted == null)) {
                this.GetTotalPriceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTotalPriceOperationCompleted);
            }
            this.InvokeAsync("GetTotalPrice", new object[] {
                        SecurityKey,
                        request}, this.GetTotalPriceOperationCompleted, userState);
        }
        
        private void OnGetTotalPriceOperationCompleted(object arg) {
            if ((this.GetTotalPriceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTotalPriceCompleted(this, new GetTotalPriceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.ontimesystem.com/sites/CreateOrder", RequestNamespace="http://www.ontimesystem.com/sites/", ResponseNamespace="http://www.ontimesystem.com/sites/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CreateOrder(string SecurityKey, Order request) {
            object[] results = this.Invoke("CreateOrder", new object[] {
                        SecurityKey,
                        request});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CreateOrderAsync(string SecurityKey, Order request) {
            this.CreateOrderAsync(SecurityKey, request, null);
        }
        
        /// <remarks/>
        public void CreateOrderAsync(string SecurityKey, Order request, object userState) {
            if ((this.CreateOrderOperationCompleted == null)) {
                this.CreateOrderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateOrderOperationCompleted);
            }
            this.InvokeAsync("CreateOrder", new object[] {
                        SecurityKey,
                        request}, this.CreateOrderOperationCompleted, userState);
        }
        
        private void OnCreateOrderOperationCompleted(object arg) {
            if ((this.CreateOrderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateOrderCompleted(this, new CreateOrderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.ontimesystem.com/sites/InsertOrderStatusChange", RequestNamespace="http://www.ontimesystem.com/sites/", ResponseNamespace="http://www.ontimesystem.com/sites/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool InsertOrderStatusChange(string SecurityKey, string TrackingNumber, string StatusLabelText, int StatusLevel, System.DateTime UTCChangeDate) {
            object[] results = this.Invoke("InsertOrderStatusChange", new object[] {
                        SecurityKey,
                        TrackingNumber,
                        StatusLabelText,
                        StatusLevel,
                        UTCChangeDate});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void InsertOrderStatusChangeAsync(string SecurityKey, string TrackingNumber, string StatusLabelText, int StatusLevel, System.DateTime UTCChangeDate) {
            this.InsertOrderStatusChangeAsync(SecurityKey, TrackingNumber, StatusLabelText, StatusLevel, UTCChangeDate, null);
        }
        
        /// <remarks/>
        public void InsertOrderStatusChangeAsync(string SecurityKey, string TrackingNumber, string StatusLabelText, int StatusLevel, System.DateTime UTCChangeDate, object userState) {
            if ((this.InsertOrderStatusChangeOperationCompleted == null)) {
                this.InsertOrderStatusChangeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsertOrderStatusChangeOperationCompleted);
            }
            this.InvokeAsync("InsertOrderStatusChange", new object[] {
                        SecurityKey,
                        TrackingNumber,
                        StatusLabelText,
                        StatusLevel,
                        UTCChangeDate}, this.InsertOrderStatusChangeOperationCompleted, userState);
        }
        
        private void OnInsertOrderStatusChangeOperationCompleted(object arg) {
            if ((this.InsertOrderStatusChangeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsertOrderStatusChangeCompleted(this, new InsertOrderStatusChangeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.ontimesystem.com/sites/GetOrderFileAttachmentList", RequestNamespace="http://www.ontimesystem.com/sites/", ResponseNamespace="http://www.ontimesystem.com/sites/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetOrderFileAttachmentList(string SecurityKey, string TrackingNumber) {
            object[] results = this.Invoke("GetOrderFileAttachmentList", new object[] {
                        SecurityKey,
                        TrackingNumber});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetOrderFileAttachmentListAsync(string SecurityKey, string TrackingNumber) {
            this.GetOrderFileAttachmentListAsync(SecurityKey, TrackingNumber, null);
        }
        
        /// <remarks/>
        public void GetOrderFileAttachmentListAsync(string SecurityKey, string TrackingNumber, object userState) {
            if ((this.GetOrderFileAttachmentListOperationCompleted == null)) {
                this.GetOrderFileAttachmentListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOrderFileAttachmentListOperationCompleted);
            }
            this.InvokeAsync("GetOrderFileAttachmentList", new object[] {
                        SecurityKey,
                        TrackingNumber}, this.GetOrderFileAttachmentListOperationCompleted, userState);
        }
        
        private void OnGetOrderFileAttachmentListOperationCompleted(object arg) {
            if ((this.GetOrderFileAttachmentListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOrderFileAttachmentListCompleted(this, new GetOrderFileAttachmentListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.ontimesystem.com/sites/GetOrderFileAttachment", RequestNamespace="http://www.ontimesystem.com/sites/", ResponseNamespace="http://www.ontimesystem.com/sites/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetOrderFileAttachment(string SecurityKey, string TrackingNumber, string FileNameWithExtension) {
            object[] results = this.Invoke("GetOrderFileAttachment", new object[] {
                        SecurityKey,
                        TrackingNumber,
                        FileNameWithExtension});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetOrderFileAttachmentAsync(string SecurityKey, string TrackingNumber, string FileNameWithExtension) {
            this.GetOrderFileAttachmentAsync(SecurityKey, TrackingNumber, FileNameWithExtension, null);
        }
        
        /// <remarks/>
        public void GetOrderFileAttachmentAsync(string SecurityKey, string TrackingNumber, string FileNameWithExtension, object userState) {
            if ((this.GetOrderFileAttachmentOperationCompleted == null)) {
                this.GetOrderFileAttachmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOrderFileAttachmentOperationCompleted);
            }
            this.InvokeAsync("GetOrderFileAttachment", new object[] {
                        SecurityKey,
                        TrackingNumber,
                        FileNameWithExtension}, this.GetOrderFileAttachmentOperationCompleted, userState);
        }
        
        private void OnGetOrderFileAttachmentOperationCompleted(object arg) {
            if ((this.GetOrderFileAttachmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOrderFileAttachmentCompleted(this, new GetOrderFileAttachmentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.ontimesystem.com/sites/AddOrderFileAttachment", RequestNamespace="http://www.ontimesystem.com/sites/", ResponseNamespace="http://www.ontimesystem.com/sites/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void AddOrderFileAttachment(string SecurityKey, string TrackingNumber, string FileNameWithExtension, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] FileContents) {
            this.Invoke("AddOrderFileAttachment", new object[] {
                        SecurityKey,
                        TrackingNumber,
                        FileNameWithExtension,
                        FileContents});
        }
        
        /// <remarks/>
        public void AddOrderFileAttachmentAsync(string SecurityKey, string TrackingNumber, string FileNameWithExtension, byte[] FileContents) {
            this.AddOrderFileAttachmentAsync(SecurityKey, TrackingNumber, FileNameWithExtension, FileContents, null);
        }
        
        /// <remarks/>
        public void AddOrderFileAttachmentAsync(string SecurityKey, string TrackingNumber, string FileNameWithExtension, byte[] FileContents, object userState) {
            if ((this.AddOrderFileAttachmentOperationCompleted == null)) {
                this.AddOrderFileAttachmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddOrderFileAttachmentOperationCompleted);
            }
            this.InvokeAsync("AddOrderFileAttachment", new object[] {
                        SecurityKey,
                        TrackingNumber,
                        FileNameWithExtension,
                        FileContents}, this.AddOrderFileAttachmentOperationCompleted, userState);
        }
        
        private void OnAddOrderFileAttachmentOperationCompleted(object arg) {
            if ((this.AddOrderFileAttachmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddOrderFileAttachmentCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.ontimesystem.com/sites/DeleteOrderFileAttachment", RequestNamespace="http://www.ontimesystem.com/sites/", ResponseNamespace="http://www.ontimesystem.com/sites/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteOrderFileAttachment(string SecurityKey, string TrackingNumber, string FileNameWithExtension) {
            this.Invoke("DeleteOrderFileAttachment", new object[] {
                        SecurityKey,
                        TrackingNumber,
                        FileNameWithExtension});
        }
        
        /// <remarks/>
        public void DeleteOrderFileAttachmentAsync(string SecurityKey, string TrackingNumber, string FileNameWithExtension) {
            this.DeleteOrderFileAttachmentAsync(SecurityKey, TrackingNumber, FileNameWithExtension, null);
        }
        
        /// <remarks/>
        public void DeleteOrderFileAttachmentAsync(string SecurityKey, string TrackingNumber, string FileNameWithExtension, object userState) {
            if ((this.DeleteOrderFileAttachmentOperationCompleted == null)) {
                this.DeleteOrderFileAttachmentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteOrderFileAttachmentOperationCompleted);
            }
            this.InvokeAsync("DeleteOrderFileAttachment", new object[] {
                        SecurityKey,
                        TrackingNumber,
                        FileNameWithExtension}, this.DeleteOrderFileAttachmentOperationCompleted, userState);
        }
        
        private void OnDeleteOrderFileAttachmentOperationCompleted(object arg) {
            if ((this.DeleteOrderFileAttachmentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteOrderFileAttachmentCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.ontimesystem.com/sites/UserList", RequestNamespace="http://www.ontimesystem.com/sites/", ResponseNamespace="http://www.ontimesystem.com/sites/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UserList(string SecurityKey, int UserType, bool OnlyUsersClockedIn) {
            object[] results = this.Invoke("UserList", new object[] {
                        SecurityKey,
                        UserType,
                        OnlyUsersClockedIn});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UserListAsync(string SecurityKey, int UserType, bool OnlyUsersClockedIn) {
            this.UserListAsync(SecurityKey, UserType, OnlyUsersClockedIn, null);
        }
        
        /// <remarks/>
        public void UserListAsync(string SecurityKey, int UserType, bool OnlyUsersClockedIn, object userState) {
            if ((this.UserListOperationCompleted == null)) {
                this.UserListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUserListOperationCompleted);
            }
            this.InvokeAsync("UserList", new object[] {
                        SecurityKey,
                        UserType,
                        OnlyUsersClockedIn}, this.UserListOperationCompleted, userState);
        }
        
        private void OnUserListOperationCompleted(object arg) {
            if ((this.UserListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UserListCompleted(this, new UserListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.ontimesystem.com/sites/UserDetail", RequestNamespace="http://www.ontimesystem.com/sites/", ResponseNamespace="http://www.ontimesystem.com/sites/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UserDetail(string SecurityKey, System.Guid UserID) {
            object[] results = this.Invoke("UserDetail", new object[] {
                        SecurityKey,
                        UserID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UserDetailAsync(string SecurityKey, System.Guid UserID) {
            this.UserDetailAsync(SecurityKey, UserID, null);
        }
        
        /// <remarks/>
        public void UserDetailAsync(string SecurityKey, System.Guid UserID, object userState) {
            if ((this.UserDetailOperationCompleted == null)) {
                this.UserDetailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUserDetailOperationCompleted);
            }
            this.InvokeAsync("UserDetail", new object[] {
                        SecurityKey,
                        UserID}, this.UserDetailOperationCompleted, userState);
        }
        
        private void OnUserDetailOperationCompleted(object arg) {
            if ((this.UserDetailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UserDetailCompleted(this, new UserDetailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.ontimesystem.com/sites/OrderUserLocation", RequestNamespace="http://www.ontimesystem.com/sites/", ResponseNamespace="http://www.ontimesystem.com/sites/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string OrderUserLocation(string SecurityKey, string TrackingNumber) {
            object[] results = this.Invoke("OrderUserLocation", new object[] {
                        SecurityKey,
                        TrackingNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void OrderUserLocationAsync(string SecurityKey, string TrackingNumber) {
            this.OrderUserLocationAsync(SecurityKey, TrackingNumber, null);
        }
        
        /// <remarks/>
        public void OrderUserLocationAsync(string SecurityKey, string TrackingNumber, object userState) {
            if ((this.OrderUserLocationOperationCompleted == null)) {
                this.OrderUserLocationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnOrderUserLocationOperationCompleted);
            }
            this.InvokeAsync("OrderUserLocation", new object[] {
                        SecurityKey,
                        TrackingNumber}, this.OrderUserLocationOperationCompleted, userState);
        }
        
        private void OnOrderUserLocationOperationCompleted(object arg) {
            if ((this.OrderUserLocationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.OrderUserLocationCompleted(this, new OrderUserLocationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.ontimesystem.com/sites/UserLocation", RequestNamespace="http://www.ontimesystem.com/sites/", ResponseNamespace="http://www.ontimesystem.com/sites/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UserLocation(string SecurityKey, System.Guid UserID) {
            object[] results = this.Invoke("UserLocation", new object[] {
                        SecurityKey,
                        UserID});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UserLocationAsync(string SecurityKey, System.Guid UserID) {
            this.UserLocationAsync(SecurityKey, UserID, null);
        }
        
        /// <remarks/>
        public void UserLocationAsync(string SecurityKey, System.Guid UserID, object userState) {
            if ((this.UserLocationOperationCompleted == null)) {
                this.UserLocationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUserLocationOperationCompleted);
            }
            this.InvokeAsync("UserLocation", new object[] {
                        SecurityKey,
                        UserID}, this.UserLocationOperationCompleted, userState);
        }
        
        private void OnUserLocationOperationCompleted(object arg) {
            if ((this.UserLocationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UserLocationCompleted(this, new UserLocationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.ontimesystem.com/sites/OrdersAssignedToUser", RequestNamespace="http://www.ontimesystem.com/sites/", ResponseNamespace="http://www.ontimesystem.com/sites/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] OrdersAssignedToUser(string SecurityKey, System.Guid UserID) {
            object[] results = this.Invoke("OrdersAssignedToUser", new object[] {
                        SecurityKey,
                        UserID});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void OrdersAssignedToUserAsync(string SecurityKey, System.Guid UserID) {
            this.OrdersAssignedToUserAsync(SecurityKey, UserID, null);
        }
        
        /// <remarks/>
        public void OrdersAssignedToUserAsync(string SecurityKey, System.Guid UserID, object userState) {
            if ((this.OrdersAssignedToUserOperationCompleted == null)) {
                this.OrdersAssignedToUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnOrdersAssignedToUserOperationCompleted);
            }
            this.InvokeAsync("OrdersAssignedToUser", new object[] {
                        SecurityKey,
                        UserID}, this.OrdersAssignedToUserOperationCompleted, userState);
        }
        
        private void OnOrdersAssignedToUserOperationCompleted(object arg) {
            if ((this.OrdersAssignedToUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.OrdersAssignedToUserCompleted(this, new OrdersAssignedToUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.ontimesystem.com/sites/OrderAddModifier", RequestNamespace="http://www.ontimesystem.com/sites/", ResponseNamespace="http://www.ontimesystem.com/sites/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void OrderAddModifier(string SecurityKey, string OrderTrackingNumber, string ModifierName, decimal CustomAmount) {
            this.Invoke("OrderAddModifier", new object[] {
                        SecurityKey,
                        OrderTrackingNumber,
                        ModifierName,
                        CustomAmount});
        }
        
        /// <remarks/>
        public void OrderAddModifierAsync(string SecurityKey, string OrderTrackingNumber, string ModifierName, decimal CustomAmount) {
            this.OrderAddModifierAsync(SecurityKey, OrderTrackingNumber, ModifierName, CustomAmount, null);
        }
        
        /// <remarks/>
        public void OrderAddModifierAsync(string SecurityKey, string OrderTrackingNumber, string ModifierName, decimal CustomAmount, object userState) {
            if ((this.OrderAddModifierOperationCompleted == null)) {
                this.OrderAddModifierOperationCompleted = new System.Threading.SendOrPostCallback(this.OnOrderAddModifierOperationCompleted);
            }
            this.InvokeAsync("OrderAddModifier", new object[] {
                        SecurityKey,
                        OrderTrackingNumber,
                        ModifierName,
                        CustomAmount}, this.OrderAddModifierOperationCompleted, userState);
        }
        
        private void OnOrderAddModifierOperationCompleted(object arg) {
            if ((this.OrderAddModifierCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.OrderAddModifierCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.ontimesystem.com/sites/OrderRemoveModifier", RequestNamespace="http://www.ontimesystem.com/sites/", ResponseNamespace="http://www.ontimesystem.com/sites/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void OrderRemoveModifier(string SecurityKey, string OrderTrackingNumber, string ModifierName) {
            this.Invoke("OrderRemoveModifier", new object[] {
                        SecurityKey,
                        OrderTrackingNumber,
                        ModifierName});
        }
        
        /// <remarks/>
        public void OrderRemoveModifierAsync(string SecurityKey, string OrderTrackingNumber, string ModifierName) {
            this.OrderRemoveModifierAsync(SecurityKey, OrderTrackingNumber, ModifierName, null);
        }
        
        /// <remarks/>
        public void OrderRemoveModifierAsync(string SecurityKey, string OrderTrackingNumber, string ModifierName, object userState) {
            if ((this.OrderRemoveModifierOperationCompleted == null)) {
                this.OrderRemoveModifierOperationCompleted = new System.Threading.SendOrPostCallback(this.OnOrderRemoveModifierOperationCompleted);
            }
            this.InvokeAsync("OrderRemoveModifier", new object[] {
                        SecurityKey,
                        OrderTrackingNumber,
                        ModifierName}, this.OrderRemoveModifierOperationCompleted, userState);
        }
        
        private void OnOrderRemoveModifierOperationCompleted(object arg) {
            if ((this.OrderRemoveModifierCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.OrderRemoveModifierCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.ontimesystem.com/sites/OrderAddMiscUserCompensation", RequestNamespace="http://www.ontimesystem.com/sites/", ResponseNamespace="http://www.ontimesystem.com/sites/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void OrderAddMiscUserCompensation(string SecurityKey, string OrderTrackingNumber, System.Guid UserID, int UserType, string Description, decimal MoneyAmount) {
            this.Invoke("OrderAddMiscUserCompensation", new object[] {
                        SecurityKey,
                        OrderTrackingNumber,
                        UserID,
                        UserType,
                        Description,
                        MoneyAmount});
        }
        
        /// <remarks/>
        public void OrderAddMiscUserCompensationAsync(string SecurityKey, string OrderTrackingNumber, System.Guid UserID, int UserType, string Description, decimal MoneyAmount) {
            this.OrderAddMiscUserCompensationAsync(SecurityKey, OrderTrackingNumber, UserID, UserType, Description, MoneyAmount, null);
        }
        
        /// <remarks/>
        public void OrderAddMiscUserCompensationAsync(string SecurityKey, string OrderTrackingNumber, System.Guid UserID, int UserType, string Description, decimal MoneyAmount, object userState) {
            if ((this.OrderAddMiscUserCompensationOperationCompleted == null)) {
                this.OrderAddMiscUserCompensationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnOrderAddMiscUserCompensationOperationCompleted);
            }
            this.InvokeAsync("OrderAddMiscUserCompensation", new object[] {
                        SecurityKey,
                        OrderTrackingNumber,
                        UserID,
                        UserType,
                        Description,
                        MoneyAmount}, this.OrderAddMiscUserCompensationOperationCompleted, userState);
        }
        
        private void OnOrderAddMiscUserCompensationOperationCompleted(object arg) {
            if ((this.OrderAddMiscUserCompensationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.OrderAddMiscUserCompensationCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.ontimesystem.com/sites/CreateCustomer", RequestNamespace="http://www.ontimesystem.com/sites/", ResponseNamespace="http://www.ontimesystem.com/sites/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Guid CreateCustomer(string SecurityKey, string Name, string Contact, string AccountNumber, string Phone, string Fax, string Email, string Website, string Street1, string Street2, string City, string State, string PostalCode, string Country) {
            object[] results = this.Invoke("CreateCustomer", new object[] {
                        SecurityKey,
                        Name,
                        Contact,
                        AccountNumber,
                        Phone,
                        Fax,
                        Email,
                        Website,
                        Street1,
                        Street2,
                        City,
                        State,
                        PostalCode,
                        Country});
            return ((System.Guid)(results[0]));
        }
        
        /// <remarks/>
        public void CreateCustomerAsync(string SecurityKey, string Name, string Contact, string AccountNumber, string Phone, string Fax, string Email, string Website, string Street1, string Street2, string City, string State, string PostalCode, string Country) {
            this.CreateCustomerAsync(SecurityKey, Name, Contact, AccountNumber, Phone, Fax, Email, Website, Street1, Street2, City, State, PostalCode, Country, null);
        }
        
        /// <remarks/>
        public void CreateCustomerAsync(string SecurityKey, string Name, string Contact, string AccountNumber, string Phone, string Fax, string Email, string Website, string Street1, string Street2, string City, string State, string PostalCode, string Country, object userState) {
            if ((this.CreateCustomerOperationCompleted == null)) {
                this.CreateCustomerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateCustomerOperationCompleted);
            }
            this.InvokeAsync("CreateCustomer", new object[] {
                        SecurityKey,
                        Name,
                        Contact,
                        AccountNumber,
                        Phone,
                        Fax,
                        Email,
                        Website,
                        Street1,
                        Street2,
                        City,
                        State,
                        PostalCode,
                        Country}, this.CreateCustomerOperationCompleted, userState);
        }
        
        private void OnCreateCustomerOperationCompleted(object arg) {
            if ((this.CreateCustomerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateCustomerCompleted(this, new CreateCustomerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.ontimesystem.com/sites/")]
    public partial class Item {
        
        private string descriptionField;
        
        private string commentsField;
        
        private decimal heightField;
        
        private decimal widthField;
        
        private decimal depthField;
        
        private decimal weightField;
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public string Comments {
            get {
                return this.commentsField;
            }
            set {
                this.commentsField = value;
            }
        }
        
        /// <remarks/>
        public decimal Height {
            get {
                return this.heightField;
            }
            set {
                this.heightField = value;
            }
        }
        
        /// <remarks/>
        public decimal Width {
            get {
                return this.widthField;
            }
            set {
                this.widthField = value;
            }
        }
        
        /// <remarks/>
        public decimal Depth {
            get {
                return this.depthField;
            }
            set {
                this.depthField = value;
            }
        }
        
        /// <remarks/>
        public decimal Weight {
            get {
                return this.weightField;
            }
            set {
                this.weightField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.ontimesystem.com/sites/")]
    public partial class Option {
        
        private string nameField;
        
        private decimal customValueField;
        
        /// <remarks/>
        public string Name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public decimal CustomValue {
            get {
                return this.customValueField;
            }
            set {
                this.customValueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.8.9032.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.ontimesystem.com/sites/")]
    public partial class Order {
        
        private string accountNumberField;
        
        private string trackingNumberField;
        
        private System.DateTime uTCSubmissionDateField;
        
        private string requestedByField;
        
        private string departmentNameField;
        
        private string subaccountNameField;
        
        private string priceSetNameField;
        
        private System.DateTime uTCPickupDateField;
        
        private System.DateTime uTCDeliveryDateField;
        
        private string descriptionField;
        
        private string commentsField;
        
        private decimal weightField;
        
        private int quantityField;
        
        private decimal lengthField;
        
        private decimal heightField;
        
        private decimal widthField;
        
        private decimal distanceField;
        
        private string referenceNumberField;
        
        private string purchaseOrderNumberField;
        
        private decimal declaredValueField;
        
        private bool triggerWorkflowEventsField;
        
        private string incomingTrackingNumberField;
        
        private string outgoingTrackingNumberField;
        
        private string collectionNameField;
        
        private string collectionContactField;
        
        private string collectionStreet1Field;
        
        private string collectionStreet2Field;
        
        private string collectionCityField;
        
        private string collectionStateField;
        
        private string collectionPostalCodeField;
        
        private string collectionCountryField;
        
        private string collectionPhoneField;
        
        private string collectionEmailField;
        
        private string deliveryNameField;
        
        private string deliveryContactField;
        
        private string deliveryStreet1Field;
        
        private string deliveryStreet2Field;
        
        private string deliveryCityField;
        
        private string deliveryStateField;
        
        private string deliveryPostalCodeField;
        
        private string deliveryCountryField;
        
        private string deliveryPhoneField;
        
        private string deliveryEmailField;
        
        private Option[] optionsField;
        
        private Item[] itemsField;
        
        /// <remarks/>
        public string AccountNumber {
            get {
                return this.accountNumberField;
            }
            set {
                this.accountNumberField = value;
            }
        }
        
        /// <remarks/>
        public string TrackingNumber {
            get {
                return this.trackingNumberField;
            }
            set {
                this.trackingNumberField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime UTCSubmissionDate {
            get {
                return this.uTCSubmissionDateField;
            }
            set {
                this.uTCSubmissionDateField = value;
            }
        }
        
        /// <remarks/>
        public string RequestedBy {
            get {
                return this.requestedByField;
            }
            set {
                this.requestedByField = value;
            }
        }
        
        /// <remarks/>
        public string DepartmentName {
            get {
                return this.departmentNameField;
            }
            set {
                this.departmentNameField = value;
            }
        }
        
        /// <remarks/>
        public string SubaccountName {
            get {
                return this.subaccountNameField;
            }
            set {
                this.subaccountNameField = value;
            }
        }
        
        /// <remarks/>
        public string PriceSetName {
            get {
                return this.priceSetNameField;
            }
            set {
                this.priceSetNameField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime UTCPickupDate {
            get {
                return this.uTCPickupDateField;
            }
            set {
                this.uTCPickupDateField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime UTCDeliveryDate {
            get {
                return this.uTCDeliveryDateField;
            }
            set {
                this.uTCDeliveryDateField = value;
            }
        }
        
        /// <remarks/>
        public string Description {
            get {
                return this.descriptionField;
            }
            set {
                this.descriptionField = value;
            }
        }
        
        /// <remarks/>
        public string Comments {
            get {
                return this.commentsField;
            }
            set {
                this.commentsField = value;
            }
        }
        
        /// <remarks/>
        public decimal Weight {
            get {
                return this.weightField;
            }
            set {
                this.weightField = value;
            }
        }
        
        /// <remarks/>
        public int Quantity {
            get {
                return this.quantityField;
            }
            set {
                this.quantityField = value;
            }
        }
        
        /// <remarks/>
        public decimal Length {
            get {
                return this.lengthField;
            }
            set {
                this.lengthField = value;
            }
        }
        
        /// <remarks/>
        public decimal Height {
            get {
                return this.heightField;
            }
            set {
                this.heightField = value;
            }
        }
        
        /// <remarks/>
        public decimal Width {
            get {
                return this.widthField;
            }
            set {
                this.widthField = value;
            }
        }
        
        /// <remarks/>
        public decimal Distance {
            get {
                return this.distanceField;
            }
            set {
                this.distanceField = value;
            }
        }
        
        /// <remarks/>
        public string ReferenceNumber {
            get {
                return this.referenceNumberField;
            }
            set {
                this.referenceNumberField = value;
            }
        }
        
        /// <remarks/>
        public string PurchaseOrderNumber {
            get {
                return this.purchaseOrderNumberField;
            }
            set {
                this.purchaseOrderNumberField = value;
            }
        }
        
        /// <remarks/>
        public decimal DeclaredValue {
            get {
                return this.declaredValueField;
            }
            set {
                this.declaredValueField = value;
            }
        }
        
        /// <remarks/>
        public bool TriggerWorkflowEvents {
            get {
                return this.triggerWorkflowEventsField;
            }
            set {
                this.triggerWorkflowEventsField = value;
            }
        }
        
        /// <remarks/>
        public string IncomingTrackingNumber {
            get {
                return this.incomingTrackingNumberField;
            }
            set {
                this.incomingTrackingNumberField = value;
            }
        }
        
        /// <remarks/>
        public string OutgoingTrackingNumber {
            get {
                return this.outgoingTrackingNumberField;
            }
            set {
                this.outgoingTrackingNumberField = value;
            }
        }
        
        /// <remarks/>
        public string CollectionName {
            get {
                return this.collectionNameField;
            }
            set {
                this.collectionNameField = value;
            }
        }
        
        /// <remarks/>
        public string CollectionContact {
            get {
                return this.collectionContactField;
            }
            set {
                this.collectionContactField = value;
            }
        }
        
        /// <remarks/>
        public string CollectionStreet1 {
            get {
                return this.collectionStreet1Field;
            }
            set {
                this.collectionStreet1Field = value;
            }
        }
        
        /// <remarks/>
        public string CollectionStreet2 {
            get {
                return this.collectionStreet2Field;
            }
            set {
                this.collectionStreet2Field = value;
            }
        }
        
        /// <remarks/>
        public string CollectionCity {
            get {
                return this.collectionCityField;
            }
            set {
                this.collectionCityField = value;
            }
        }
        
        /// <remarks/>
        public string CollectionState {
            get {
                return this.collectionStateField;
            }
            set {
                this.collectionStateField = value;
            }
        }
        
        /// <remarks/>
        public string CollectionPostalCode {
            get {
                return this.collectionPostalCodeField;
            }
            set {
                this.collectionPostalCodeField = value;
            }
        }
        
        /// <remarks/>
        public string CollectionCountry {
            get {
                return this.collectionCountryField;
            }
            set {
                this.collectionCountryField = value;
            }
        }
        
        /// <remarks/>
        public string CollectionPhone {
            get {
                return this.collectionPhoneField;
            }
            set {
                this.collectionPhoneField = value;
            }
        }
        
        /// <remarks/>
        public string CollectionEmail {
            get {
                return this.collectionEmailField;
            }
            set {
                this.collectionEmailField = value;
            }
        }
        
        /// <remarks/>
        public string DeliveryName {
            get {
                return this.deliveryNameField;
            }
            set {
                this.deliveryNameField = value;
            }
        }
        
        /// <remarks/>
        public string DeliveryContact {
            get {
                return this.deliveryContactField;
            }
            set {
                this.deliveryContactField = value;
            }
        }
        
        /// <remarks/>
        public string DeliveryStreet1 {
            get {
                return this.deliveryStreet1Field;
            }
            set {
                this.deliveryStreet1Field = value;
            }
        }
        
        /// <remarks/>
        public string DeliveryStreet2 {
            get {
                return this.deliveryStreet2Field;
            }
            set {
                this.deliveryStreet2Field = value;
            }
        }
        
        /// <remarks/>
        public string DeliveryCity {
            get {
                return this.deliveryCityField;
            }
            set {
                this.deliveryCityField = value;
            }
        }
        
        /// <remarks/>
        public string DeliveryState {
            get {
                return this.deliveryStateField;
            }
            set {
                this.deliveryStateField = value;
            }
        }
        
        /// <remarks/>
        public string DeliveryPostalCode {
            get {
                return this.deliveryPostalCodeField;
            }
            set {
                this.deliveryPostalCodeField = value;
            }
        }
        
        /// <remarks/>
        public string DeliveryCountry {
            get {
                return this.deliveryCountryField;
            }
            set {
                this.deliveryCountryField = value;
            }
        }
        
        /// <remarks/>
        public string DeliveryPhone {
            get {
                return this.deliveryPhoneField;
            }
            set {
                this.deliveryPhoneField = value;
            }
        }
        
        /// <remarks/>
        public string DeliveryEmail {
            get {
                return this.deliveryEmailField;
            }
            set {
                this.deliveryEmailField = value;
            }
        }
        
        /// <remarks/>
        public Option[] Options {
            get {
                return this.optionsField;
            }
            set {
                this.optionsField = value;
            }
        }
        
        /// <remarks/>
        public Item[] Items {
            get {
                return this.itemsField;
            }
            set {
                this.itemsField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void SetSignatureRequirementCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void SetCODRequirementCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void SetUserDefinedFieldCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetOrderAsXMLCompletedEventHandler(object sender, GetOrderAsXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOrderAsXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOrderAsXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetLocationAsXMLCompletedEventHandler(object sender, GetLocationAsXMLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetLocationAsXMLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetLocationAsXMLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetOrdersByStatusCompletedEventHandler(object sender, GetOrdersByStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOrdersByStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOrdersByStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void SetOrderColumnByNameCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetOrderColumnByNameCompletedEventHandler(object sender, GetOrderColumnByNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOrderColumnByNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOrderColumnByNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetTotalPriceCompletedEventHandler(object sender, GetTotalPriceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTotalPriceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTotalPriceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public decimal Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((decimal)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void CreateOrderCompletedEventHandler(object sender, CreateOrderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateOrderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateOrderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void InsertOrderStatusChangeCompletedEventHandler(object sender, InsertOrderStatusChangeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsertOrderStatusChangeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsertOrderStatusChangeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetOrderFileAttachmentListCompletedEventHandler(object sender, GetOrderFileAttachmentListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOrderFileAttachmentListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOrderFileAttachmentListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetOrderFileAttachmentCompletedEventHandler(object sender, GetOrderFileAttachmentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOrderFileAttachmentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOrderFileAttachmentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void AddOrderFileAttachmentCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void DeleteOrderFileAttachmentCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void UserListCompletedEventHandler(object sender, UserListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UserListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UserListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void UserDetailCompletedEventHandler(object sender, UserDetailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UserDetailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UserDetailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void OrderUserLocationCompletedEventHandler(object sender, OrderUserLocationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OrderUserLocationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal OrderUserLocationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void UserLocationCompletedEventHandler(object sender, UserLocationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UserLocationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UserLocationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void OrdersAssignedToUserCompletedEventHandler(object sender, OrdersAssignedToUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class OrdersAssignedToUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal OrdersAssignedToUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void OrderAddModifierCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void OrderRemoveModifierCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void OrderAddMiscUserCompensationCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void CreateCustomerCompletedEventHandler(object sender, CreateCustomerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateCustomerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateCustomerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Guid Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Guid)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591